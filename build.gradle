buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.0.M4"
    }
}

apply plugin: "java"
apply plugin: "spring-boot"

version = "0.1.0"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

javadoc {
    options.encoding = defaultEncoding
}

test {
    include "**/model/**", "**/controller/**"
}

repositories {
    jcenter()
}

dependencies {
    compile "org.projectlombok:lombok:1.16.4"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-cache"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework:spring-orm:4.2.0.RELEASE"
    compile "org.hibernate:hibernate-core:5.0.0.Final"
    compile "org.hibernate:hibernate-java8:5.0.0.Final"
    compile "org.hibernate:hibernate-ehcache:5.0.0.Final"
    compile "net.sf.ehcache:ehcache-core:2.6.11"
    compile "com.zaxxer:HikariCP-java6:2.3.7"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.6.1"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1"
    compile "commons-io:commons-io:2.4"
    compile "commons-collections:commons-collections:3.2.+"
    compile "org.apache.commons:commons-lang3:3.3.+"
    compile "com.ibm.icu:icu4j:54.1.1"
    compile fileTree(dir: 'libs', includes: ['*.jar'])
    runtime "com.h2database:h2:1.4.+"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.6"
}

// 自分のプロジェクトとしてディープコピーしたい時は以下の変数を編集した後
// 「 gradlew copyProject 」を実行してください。
def yourProjectName = "hoge"
def yourProjectPackage = "hoge.sample"
def yourProjectPath = "../${yourProjectName}"
task copyProject << {
    def projectPath = yourProjectPath
    def packagePath = yourProjectPackage.replaceAll(/\./, "/")
    def javaPath = "${projectPath}/src/main/java/${packagePath}"
    def testPath = "${projectPath}/src/test/java/${packagePath}"
    def replacePackage = {line ->
        def v = line.replaceFirst(/^package sample/, "package ${yourProjectPackage}")
        v.replaceFirst(/^import sample/, "import ${yourProjectPackage}")
    }
    copy {
        from (".") {
            exclude ".*", "bin", "build", "LICENSE", "src/main/java", "src/test/java"
        }
        into projectPath
    }
    copy {
        from ("README.md", "settings.gradle")
        into projectPath
        filter {line -> line.replaceFirst(/sample-boot-hibernate/, "${yourProjectName}")}
    }
    copy {
        from ("src/main/resources/application.yml")
        into "${projectPath}/src/main/resources"
        filter {line ->
            def v = line.replaceFirst(/sample-boot-hibernate/, "${yourProjectName}")
            v.replaceFirst(/packageToScan: sample/, "packageToScan: ${yourProjectPackage}")
        }
    }
    copy {
        from ("src/main/resources/logback.xml")
        into "${projectPath}/src/main/resources"
        filter {line -> line.replaceFirst(/logger name="sample"/, "logger name=\"${yourProjectPackage}\"") }
    }
    copy {
        from ("src/main/java/sample")
        into javaPath
        filter replacePackage
    }
    copy {
        from ("src/test/java/sample")
        into testPath
        filter replacePackage
    }
    
}
